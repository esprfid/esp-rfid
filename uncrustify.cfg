#
# uncrustify config file for the linux kernel, with mods for Tome's preferences.
#
# Documentation for settings https://github.com/uncrustify/uncrustify/blob/master/etc/defaults.cfg

indent_with_tabs    = 0     # 1=indent to level only, 2=indent with tabs
input_tab_size      = 4     # original tab size
output_tab_size     = 4     # new tab size
indent_columns      = output_tab_size
indent_switch_case  = 4
code_width          = 120
indent_label        = 1     # pos: absolute col, neg: relative column
indent_class        = true


# inter-symbol newlines
nl_enum_brace       = remove    # "enum {" vs "enum \n {"
nl_union_brace      = remove    # "union {" vs "union \n {"
nl_struct_brace     = remove    # "struct {" vs "struct \n {"
nl_do_brace         = remove    # "do {" vs "do \n {"
nl_if_brace         = remove    # "if () {" vs "if () \n {"
nl_for_brace        = remove    # "for () {" vs "for () \n {"
nl_else_brace       = remove    # "else {" vs "else \n {"
nl_while_brace      = remove    # "while () {" vs "while () \n {"
nl_switch_brace     = remove    # "switch () {" vs "switch () \n {"
nl_brace_while      = remove    # "} while" vs "} \n while" - cuddle while
nl_brace_else       = remove    # "} else" vs "} \n else" - cuddle else
sp_brace_else       = force
sp_else_brace       = force
nl_func_var_def_blk = 1
nl_fcall_brace      = remove    # "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace       = add       # "int foo() {" vs "int foo()\n{"
nl_after_label_colon= true      # "fail:\nfree(foo);" vs "fail: free(foo);"


# Source code modifications
mod_paren_on_return     = remove    # "return 1;" vs "return (1);"
mod_full_brace_if       = force     # "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_if_chain = false
mod_full_brace_for      = force     # "for () a--;" vs "for () { a--; }"
mod_full_brace_do       = force     # "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while    = force     # "while (a) a--;" vs "while (a) { a--; }"
mod_full_brace_nl       = 3         # don't remove if more than 3 newlines


# inter-character spacing options
sp_return_paren               = force     # "return (1);" vs "return(1);"
sp_sizeof_paren               = remove    # "sizeof (int)" vs "sizeof(int)"
sp_before_sparen              = force     # "if (" vs "if("
sp_after_sparen               = force     # "if () {" vs "if (){"
sp_after_cast                 = remove    # "(int) a" vs "(int)a"
sp_inside_braces              = force     # "{ 1 }" vs "{1}"
sp_inside_braces_struct       = force     # "{ 1 }" vs "{1}"
sp_inside_braces_enum         = force     # "{ 1 }" vs "{1}"
sp_arith                      = force     # spaces around + - etc
sp_bool                       = force     # spaces around && etc
sp_compare                    = force
sp_assign                     = force
sp_after_comma                = force
sp_func_def_paren             = remove    # "int foo (){" vs "int foo(){"
sp_func_call_paren            = remove    # "foo (" vs "foo("
sp_func_proto_paren           = remove    # "int foo ();" vs "int foo();"
sp_inside_paren               = remove
sp_inside_square              = remove
sp_inside_paren_cast          = remove
sp_inside_fparen              = remove   # function paren
sp_inside_sparen              = remove   # control statemnets besides for
sp_paren_paren                = remove   # inside (( ))
sp_before_ptr_star            = force    # uint8_t * not uint8_t*
sp_after_ptr_star             = remove   # uint8_t * not uint8_t*
sp_between_ptr_star           = remove   # remove space between multiple **
eat_blanks_after_open_brace   = true     # remove empty lines after {
eat_blanks_before_close_brace = true
pp_indent                     = remove   # preprocessor indenting


# Aligning stuff
align_with_tabs         = false     # use tabs to align
align_on_tabstop        = true      # align on tabstops
align_keep_tabs         = false
align_enum_equ_span     = 4         # '=' in enum definition
align_nl_cont           = true // align multiline macrobackslashes
align_struct_init_span  = 3         # align stuff in a structure init '= { }'
align_right_cmt_span    = 3
cmt_star_cont           = true
indent_brace            = 0
align_func_params       = true
align_var_struct_span   = 6

# Newline
nl_start_of_file          = remove
nl_end_of_file            = force
nl_end_of_file_min        = 1
